{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "templatestorageType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_ZRS",
        "Standard_GRS",
        "Standard_RAGRS",
        "Premium_LRS"
      ]
    },
    "storagePrefix": {
      "type": "string",
      "minLength": 3,
      "defaultValue": "storagename"
    },
    "vnetName": {
      "type": "string",
      "defaultValue": "vnetName"
    },
    "vnetSubnet1Name": {
      "type": "string",
      "minLength": 3,
      "defaultValue": "Subnet1"
    },
    "vnetSubnet2Name": {
      "type": "string",
      "minLength": 3,
      "defaultValue": "Subnet2"
    },
    "vnetSubnet1Prefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/24"
    },
    "vnetSubnet2Prefix": {
      "type": "string",
      "defaultValue": "10.0.1.0/24"
    },
    "vnetPrefix": {
      "type": "string",
      "defaultValue" :  "10.0.0.0/16"
    },
    "templateVMName": {
      "type": "string",
      "minLength": 1
    },
    "templateVMAdminUserName": {
      "type": "string",
      "minLength": 1
    },
    "templateVMAdminPassword": {
      "type": "securestring"
    },
    "templateVMWindowsOSVersion": {
      "type": "string",
      "defaultValue": "2012-R2-Datacenter",
      "allowedValues": [
        "2008-R2-SP1",
        "2012-Datacenter",
        "2012-R2-Datacenter",
        "Windows-Server-Technical-Preview"
      ]
    }
  },
  "variables": {
    "vnet-templatePrefix": "[parameters('vnetPrefix')]",
    "vnet-templateSubnet1Name": "[parameters('vnetSubnet1Name')]",
    "vnet-templateSubnet1Prefix": "[parameters('vnetSubnet1Prefix')]",
    "vnet-templateSubnet2Name": "[parameters('vnetSubnet2Name')]",
    "vnet-templateSubnet2Prefix": "[parameters('vnetSubnet2Prefix')]",
    "templatestorageName": "[concat(parameters('storagePrefix'), uniqueString(resourceGroup().id))]",
    "templateVMImagePublisher": "MicrosoftWindowsServer",
    "templateVMImageOffer": "WindowsServer",
    "templateVMOSDiskName": "templateVMOSDisk",
    "templateVMVmSize": "Standard_D2_v2",
    "templateVMVnetID": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]",
    "templateVMSubnetRef": "[concat(variables('templateVMVnetID'), '/subnets/', variables('vnet-templateSubnet2Name'))]",
    "templateVMStorageAccountContainerName": "vhds",
    "templateVMNicName": "[concat(parameters('templateVMName'), 'NetworkInterface')]"


  },
  "resources": [
    {
      "name": "[parameters('vnetName')]",
      "type": "Microsoft.Network/virtualNetworks",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-03-30",
      "dependsOn": [],
      "tags": {
        "displayName": "[parameters('vnetName')]"
      },
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('vnet-templatePrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('vnet-templateSubnet1Name')]",
            "properties": {
              "addressPrefix": "[variables('vnet-templateSubnet1Prefix')]"
            }
          },
          {
            "name": "[variables('vnet-templateSubnet2Name')]",
            "properties": {
              "addressPrefix": "[variables('vnet-templateSubnet2Prefix')]"
            }
          }
        ]
      }
    },
    {
      "name": "[variables('templatestorageName')]",
      "type": "Microsoft.Storage/storageAccounts",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-01-01",
      "sku": {
        "name": "[parameters('templatestorageType')]"
      },
      "dependsOn": [ ],
      "tags": {
        "displayName": "[variables('templatestorageName')]"
      },
      "kind": "Storage"
    },
    {
      "name": "[variables('templateVMNicName')]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-03-30",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
      ],
      "tags": {
        "displayName": "templateVMNic"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('templateVMSubnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "name": "[parameters('templateVMName')]",
      "type": "Microsoft.Compute/virtualMachines",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('templatestorageName'))]",
        "[resourceId('Microsoft.Network/networkInterfaces', variables('templateVMNicName'))]"
      ],
      "tags": {
        "displayName": "templateVM"
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('templateVMVmSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('templateVMName')]",
          "adminUsername": "[parameters('templateVMAdminUsername')]",
          "adminPassword": "[parameters('templateVMAdminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('templateVMImagePublisher')]",
            "offer": "[variables('templateVMImageOffer')]",
            "sku": "[parameters('templateVMWindowsOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "templateVMOSDisk",
            "vhd": {
              "uri": "[concat(reference(resourceId('Microsoft.Storage/storageAccounts', variables('templatestorageName')), '2016-01-01').primaryEndpoints.blob, variables('templateVMStorageAccountContainerName'), '/', variables('templateVMOSDiskName'), '.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('templateVMNicName'))]"
            }
          ]
        }
      }
    }
       
  ],
  "outputs": {

  }
}
